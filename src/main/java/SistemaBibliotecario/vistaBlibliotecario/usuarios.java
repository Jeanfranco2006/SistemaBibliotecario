/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package SistemaBibliotecario.vistaBlibliotecario;

import SistemaBibliotecario.Conexion.ConexionMySQL;
import SistemaBibliotecario.Dao.BibliotecarioDAO;
import SistemaBibliotecario.Dao.LectorDAO;
import SistemaBibliotecario.Modelos.SesionActual;
import SistemaBibliotecario.VistaLogin.login;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author User
 */
public class usuarios extends javax.swing.JPanel {
private LectorDAO lectorDAO;

    /**
     * Creates new form usuarios
     */
    public usuarios() {
        initComponents();
        lectorDAO = new LectorDAO();
         cargarLectores(); // ✅ Cargar datos al iniciar
        mostrarTotalLector(); 
        
        if (SesionActual.nombre != null && !SesionActual.nombre.isEmpty()) {
        lblNombreBibliotecario.setText(" " + SesionActual.nombre);
    } else {
        lblNombreBibliotecario.setText("Bienvenido: Bibliotecario");
    }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        btnPrestamos = new javax.swing.JButton();
        btnUsuarios = new javax.swing.JButton();
        btnInicio = new javax.swing.JButton();
        btnReportes = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnSalir = new javax.swing.JButton();
        btnLibros = new javax.swing.JButton();
        lblNombreBibliotecario = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblUsuarios = new javax.swing.JTable();
        jTextField7 = new javax.swing.JTextField();
        btnLimpiar = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        txtDni = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtTelefono = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtApellidoP = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtApellidoM = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtDireccion = new javax.swing.JTextField();
        txtContrasena = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        btnAgregar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        lblTotalLectores = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("GESTION DE BIBLIOTECARIOS");

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(19, 38, 76));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnPrestamos.setBackground(new java.awt.Color(0, 51, 102));
        btnPrestamos.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        btnPrestamos.setForeground(new java.awt.Color(255, 255, 255));
        btnPrestamos.setText("PRESTAMOS");
        btnPrestamos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrestamosActionPerformed(evt);
            }
        });
        jPanel2.add(btnPrestamos, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 340, 240, 80));

        btnUsuarios.setBackground(new java.awt.Color(0, 0, 0));
        btnUsuarios.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        btnUsuarios.setForeground(new java.awt.Color(255, 255, 255));
        btnUsuarios.setText("USUARIOS");
        btnUsuarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUsuariosActionPerformed(evt);
            }
        });
        jPanel2.add(btnUsuarios, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, 240, 80));

        btnInicio.setBackground(new java.awt.Color(0, 51, 102));
        btnInicio.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        btnInicio.setForeground(new java.awt.Color(255, 255, 255));
        btnInicio.setText("INICIO");
        btnInicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInicioActionPerformed(evt);
            }
        });
        jPanel2.add(btnInicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 99, 240, 80));

        btnReportes.setBackground(new java.awt.Color(0, 51, 102));
        btnReportes.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        btnReportes.setForeground(new java.awt.Color(255, 255, 255));
        btnReportes.setText("REPORTES");
        btnReportes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReportesActionPerformed(evt);
            }
        });
        jPanel2.add(btnReportes, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 420, 240, 80));

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("BiblioSys");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 30, -1, -1));

        btnSalir.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        btnSalir.setText("SALIR");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        jPanel2.add(btnSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 621, 240, 44));

        btnLibros.setBackground(new java.awt.Color(0, 51, 102));
        btnLibros.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        btnLibros.setForeground(new java.awt.Color(255, 255, 255));
        btnLibros.setText("LIBROS");
        btnLibros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLibrosActionPerformed(evt);
            }
        });
        jPanel2.add(btnLibros, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 260, 240, 80));

        lblNombreBibliotecario.setFont(new java.awt.Font("Segoe UI Historic", 1, 18)); // NOI18N
        lblNombreBibliotecario.setForeground(new java.awt.Color(255, 255, 255));
        lblNombreBibliotecario.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblNombreBibliotecario.setText("                                ");
        lblNombreBibliotecario.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel2.add(lblNombreBibliotecario, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 569, 240, 40));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 300, 700));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/logo.jpeg"))); // NOI18N
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1090, 40, 110, 90));

        jPanel3.setBackground(new java.awt.Color(19, 38, 76));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Ventana Usuarios");
        jPanel3.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(14, 8, -1, -1));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 0, 910, 30));

        tblUsuarios.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tblUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Nombres ", "Apellidos", "Email", "Fecha Creación", "Ultimo Acceso"
            }
        ));
        tblUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblUsuariosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblUsuarios);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 290, 880, 390));

        jTextField7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField7ActionPerformed(evt);
            }
        });
        jPanel1.add(jTextField7, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 240, 390, 30));

        btnLimpiar.setBackground(new java.awt.Color(19, 38, 76));
        btnLimpiar.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        btnLimpiar.setForeground(new java.awt.Color(255, 255, 255));
        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });
        jPanel1.add(btnLimpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 190, -1, -1));

        btnBuscar.setBackground(new java.awt.Color(19, 38, 76));
        btnBuscar.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        btnBuscar.setForeground(new java.awt.Color(255, 255, 255));
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        jPanel1.add(btnBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 240, -1, -1));

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel14.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        jLabel14.setText("Dni");
        jPanel4.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 17, -1, 10));
        jPanel4.add(txtDni, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 10, 138, -1));

        jLabel15.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        jLabel15.setText("Nombre");
        jPanel4.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        jLabel7.setText("Direccion");
        jPanel4.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, -1, -1));
        jPanel4.add(txtTelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 70, 138, -1));

        jLabel10.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        jLabel10.setText("Apellido Materno");
        jPanel4.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 40, -1, -1));
        jPanel4.add(txtApellidoP, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 40, 138, -1));

        jLabel11.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        jLabel11.setText("Apellido Paterno");
        jPanel4.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 40, -1, -1));
        jPanel4.add(txtApellidoM, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 40, 138, -1));
        jPanel4.add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 40, 138, -1));

        jLabel13.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        jLabel13.setText("Telefono");
        jPanel4.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 70, -1, -1));
        jPanel4.add(txtDireccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 70, 138, -1));
        jPanel4.add(txtContrasena, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 100, 190, -1));

        jLabel16.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        jLabel16.setText("Contraseña");
        jPanel4.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, -1, -1));
        jPanel4.add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 70, 138, -1));

        jLabel12.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        jLabel12.setText("Email");
        jPanel4.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 70, -1, -1));

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 40, 770, 130));

        btnAgregar.setBackground(new java.awt.Color(19, 38, 76));
        btnAgregar.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        btnAgregar.setForeground(new java.awt.Color(255, 255, 255));
        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });
        jPanel1.add(btnAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 190, -1, -1));

        btnActualizar.setBackground(new java.awt.Color(19, 38, 76));
        btnActualizar.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        btnActualizar.setForeground(new java.awt.Color(255, 255, 255));
        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });
        jPanel1.add(btnActualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 190, -1, -1));

        btnEliminar.setBackground(new java.awt.Color(19, 38, 76));
        btnEliminar.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        btnEliminar.setForeground(new java.awt.Color(255, 255, 255));
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        jPanel1.add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 190, -1, -1));

        lblTotalLectores.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.add(lblTotalLectores, new org.netbeans.lib.awtextra.AbsoluteConstraints(1140, 260, 50, 20));

        jLabel9.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        jLabel9.setText("Total");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 260, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnPrestamosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrestamosActionPerformed
javax.swing.JFrame frame = new javax.swing.JFrame("Gestión de prestamos");
    frame.setDefaultCloseOperation(javax.swing.JFrame.EXIT_ON_CLOSE);
    frame.setContentPane(new SistemaBibliotecario.vistaBlibliotecario.prestamos()); // agrega el panel
    frame.pack(); // ajusta al tamaño preferido
    frame.setLocationRelativeTo(null); // centra la ventana
    frame.setVisible(true); // muestra la nueva ventana

    // Cierra la ventana actual
    javax.swing.SwingUtilities.getWindowAncestor(this).dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_btnPrestamosActionPerformed

    private void btnLibrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLibrosActionPerformed
      javax.swing.JFrame frame = new javax.swing.JFrame("Gestión de Libros");
    frame.setDefaultCloseOperation(javax.swing.JFrame.EXIT_ON_CLOSE);
    frame.setContentPane(new SistemaBibliotecario.vistaBlibliotecario.libros()); // agrega el panel
    frame.pack(); // ajusta al tamaño preferido
    frame.setLocationRelativeTo(null); // centra la ventana
    frame.setVisible(true); // muestra la nueva ventana

    // Cierra la ventana actual
    javax.swing.SwingUtilities.getWindowAncestor(this).dispose();  // TODO add your handling code here:
    }//GEN-LAST:event_btnLibrosActionPerformed

    private void btnUsuariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUsuariosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnUsuariosActionPerformed

    private void jTextField7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField7ActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
       String dni = txtDni.getText().trim();
    String nombre = txtNombre.getText().trim();
    String apellidoP = txtApellidoP.getText().trim();
    String apellidoM = txtApellidoM.getText().trim();
    String direccion = txtDireccion.getText().trim();
    String telefono = txtTelefono.getText().trim();
    String email = txtEmail.getText().trim();
    String contrasena = txtContrasena.getText().trim();
    String rol = "lector"; // Rol por defecto

    if (dni.isEmpty() || nombre.isEmpty() || apellidoP.isEmpty() || apellidoM.isEmpty() ||
        direccion.isEmpty() || telefono.isEmpty() || email.isEmpty() || contrasena.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Por favor, complete todos los campos.", "Advertencia", JOptionPane.WARNING_MESSAGE);
        return;
    }

    Connection conn = null;
    PreparedStatement psPersona = null;
    PreparedStatement psUsuario = null;
    ResultSet rs = null;

    try {
        conn = ConexionMySQL.getInstancia().getConexion();
        conn.setAutoCommit(false); // 🔒 inicia transacción

        // 1️⃣ Insertar persona
        String sqlPersona = "INSERT INTO persona (dni, nombre, apellido_p, apellido_m, direccion, telefono, email) "
                          + "VALUES (?, ?, ?, ?, ?, ?, ?)";
        psPersona = conn.prepareStatement(sqlPersona, Statement.RETURN_GENERATED_KEYS);
        psPersona.setString(1, dni);
        psPersona.setString(2, nombre);
        psPersona.setString(3, apellidoP);
        psPersona.setString(4, apellidoM);
        psPersona.setString(5, direccion);
        psPersona.setString(6, telefono);
        psPersona.setString(7, email);
        psPersona.executeUpdate();

        // Obtener id_persona generado
        rs = psPersona.getGeneratedKeys();
        int idPersona = 0;
        if (rs.next()) {
            idPersona = rs.getInt(1);
        }

        // 2️⃣ Insertar usuario
        String sqlUsuario = "INSERT INTO usuario (id_persona, contrasena, rol) VALUES (?, ?, ?)";
        psUsuario = conn.prepareStatement(sqlUsuario);
        psUsuario.setInt(1, idPersona);
        psUsuario.setString(2, contrasena);
        psUsuario.setString(3, rol);
        psUsuario.executeUpdate();

        conn.commit(); // ✅ Confirmar transacción
        JOptionPane.showMessageDialog(this, "✅ Lector agregado correctamente.");

        // Limpiar campos
        txtDni.setText("");
        txtNombre.setText("");
        txtApellidoP.setText("");
        txtApellidoM.setText("");
        txtDireccion.setText("");
        txtTelefono.setText("");
        txtEmail.setText("");
        txtContrasena.setText("");

        cargarLectores();
        mostrarTotalLector();

    } catch (SQLException e) {
        try {
            if (conn != null) conn.rollback(); // ❌ revertir si hay error
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        JOptionPane.showMessageDialog(this, "❌ Error al agregar bibliotecario: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    } finally {
        try {
            if (rs != null) rs.close();
            if (psPersona != null) psPersona.close();
            if (psUsuario != null) psUsuario.close();
            if (conn != null) conn.setAutoCommit(true);
        } catch (SQLException e) {
            e.printStackTrace();
        }
    } // TODO add your handling code here:
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnReportesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReportesActionPerformed
javax.swing.JFrame frame = new javax.swing.JFrame("Gestión de Reportes");
    frame.setDefaultCloseOperation(javax.swing.JFrame.EXIT_ON_CLOSE);
    frame.setContentPane(new SistemaBibliotecario.vistaBlibliotecario.reportes()); // agrega el panel
    frame.pack(); // ajusta al tamaño preferido
    frame.setLocationRelativeTo(null); // centra la ventana
    frame.setVisible(true); // muestra la nueva ventana

    // Cierra la ventana actual
    javax.swing.SwingUtilities.getWindowAncestor(this).dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_btnReportesActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        login view = new login();
        view.setLocationRelativeTo(null); // Centrar la ventana
        view.setVisible(true); // Mostrar el login

        // Cerrar la ventana actual
        javax.swing.SwingUtilities.getWindowAncestor(this).dispose();  // TODO add your handling code here:
    }//GEN-LAST:event_btnSalirActionPerformed

    private void tblUsuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblUsuariosMouseClicked
        try {
        int filaSeleccionada = tblUsuarios.getSelectedRow();
        
        if (filaSeleccionada >= 0) {
            // Obtener el EMAIL de la fila seleccionada (columna 2)
            String email = tblUsuarios.getValueAt(filaSeleccionada, 2).toString();
            
            // Buscar datos completos por EMAIL
            buscarDatosCompletosPorEmail(email);
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error al seleccionar usuario: " + e.getMessage(), 
            "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_tblUsuariosMouseClicked

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
String dniOriginal = txtDni.getText().trim();
    String nombre = txtNombre.getText().trim();
    String apellidoP = txtApellidoP.getText().trim();
    String apellidoM = txtApellidoM.getText().trim();
    String direccion = txtDireccion.getText().trim();
    String telefono = txtTelefono.getText().trim();
    String email = txtEmail.getText().trim();

    // Validar campos obligatorios
    if (dniOriginal.isEmpty() || nombre.isEmpty() || apellidoP.isEmpty() || 
        apellidoM.isEmpty() || direccion.isEmpty() || telefono.isEmpty() || email.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Por favor, complete todos los campos.", 
            "Advertencia", JOptionPane.WARNING_MESSAGE);
        return;
    }

    // Confirmar actualización
    int confirmacion = JOptionPane.showConfirmDialog(this,
        "¿Está seguro de que desea actualizar los datos del lector?",
        "Confirmar Actualización", JOptionPane.YES_NO_OPTION);

    if (confirmacion == JOptionPane.YES_OPTION) {
        boolean exito = lectorDAO.actualizarLector(dniOriginal, dniOriginal, nombre, 
            apellidoP, apellidoM, direccion, telefono, email);

        if (exito) {
            JOptionPane.showMessageDialog(this, "✅ Lector actualizado correctamente.");
            cargarLectores(); // Refrescar tabla
            limpiarCampos(); // Limpiar formulario
        } else {
            JOptionPane.showMessageDialog(this, "❌ Error al actualizar el lector.", 
                "Error", JOptionPane.ERROR_MESSAGE);
        }
    }


    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
String dni = txtDni.getText().trim();
    
    if (dni.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Seleccione un lector de la tabla para eliminar.", 
            "Advertencia", JOptionPane.WARNING_MESSAGE);
        return;
    }

    // Confirmar eliminación
    int confirmacion = JOptionPane.showConfirmDialog(this,
        "¿Está seguro de que desea eliminar al lector con DNI: " + dni + "?\n" +
        "Esta acción no se puede deshacer.",
        "Confirmar Eliminación", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);

    if (confirmacion == JOptionPane.YES_OPTION) {
        boolean exito = lectorDAO.eliminarLector(dni);

        if (exito) {
            JOptionPane.showMessageDialog(this, "✅ Lector eliminado correctamente.");
            cargarLectores(); // Refrescar tabla
            mostrarTotalLector(); // Actualizar contador
            limpiarCampos(); // Limpiar formulario
        } else {
            JOptionPane.showMessageDialog(this, "❌ Error al eliminar el lector.", 
                "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed

    limpiarCampos();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
 String criterio = jTextField7.getText().trim();
    
    if (criterio.isEmpty()) {
        cargarLectores(); // Si está vacío, cargar todos
        return;
    }

    try {
        DefaultTableModel model = (DefaultTableModel) tblUsuarios.getModel();
        model.setRowCount(0); // Limpiar tabla
        
        List<Object[]> lectores = lectorDAO.buscarLectorPorDniEmailNombre(criterio);
        
        if (lectores.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No se encontraron lectores con ese criterio.", 
                "Información", JOptionPane.INFORMATION_MESSAGE);
        } else {
            for (Object[] lector : lectores) {
                Object[] filaMostrar = new Object[5];
                filaMostrar[0] = lector[1]; // Nombre
                filaMostrar[1] = lector[2]; // Apellidos
                filaMostrar[2] = lector[3]; // Email
                filaMostrar[3] = lector[4]; // Fecha Creación
                filaMostrar[4] = lector[5]; // Último Acceso
                model.addRow(filaMostrar);
            }
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error al buscar lectores: " + e.getMessage(), 
            "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnInicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInicioActionPerformed
        javax.swing.JFrame frame = new javax.swing.JFrame("ventana de inicio");
    frame.setDefaultCloseOperation(javax.swing.JFrame.EXIT_ON_CLOSE);
    frame.setContentPane(new SistemaBibliotecario.vistaBlibliotecario.inicio()); // agrega el panel
    frame.pack(); // ajusta al tamaño preferido
    frame.setLocationRelativeTo(null); // centra la ventana
    frame.setVisible(true); // muestra la nueva ventana

    // Cierra la ventana actual
    javax.swing.SwingUtilities.getWindowAncestor(this).dispose();  // TODO add your handling code here:
    }//GEN-LAST:event_btnInicioActionPerformed

    
    private void buscarDatosCompletosPorEmail(String email) {
    try {
        Object[] usuarioCompleto = lectorDAO.obtenerUsuarioCompletoPorEmail(email);
        
        if (usuarioCompleto != null) {
            // Llenar los campos de texto
            txtDni.setText(usuarioCompleto[0].toString());
            txtNombre.setText(usuarioCompleto[1].toString());
            txtApellidoP.setText(usuarioCompleto[2].toString());
            txtApellidoM.setText(usuarioCompleto[3].toString());
            txtDireccion.setText(usuarioCompleto[4].toString());
            txtTelefono.setText(usuarioCompleto[5].toString());
            txtEmail.setText(usuarioCompleto[6].toString());
            
            
        } else {
            JOptionPane.showMessageDialog(this, "No se encontraron los datos completos del usuario.", 
                "Información", JOptionPane.INFORMATION_MESSAGE);
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error al cargar datos del usuario: " + e.getMessage(), 
            "Error", JOptionPane.ERROR_MESSAGE);
    }
}
// Método para cargar los lectores (actualizado)
private void cargarLectores() {
    try {
        DefaultTableModel model = (DefaultTableModel) tblUsuarios.getModel();
        model.setRowCount(0); // Limpiar tabla
        
        List<Object[]> lectores = lectorDAO.listarLector();
        
        if (lectores.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No hay usuarios lectores registrados.", 
                "Información", JOptionPane.INFORMATION_MESSAGE);
        } else {
            for (Object[] lector : lectores) {
                // Crear nueva fila con solo las 5 columnas visibles
                Object[] filaMostrar = new Object[5];
                filaMostrar[0] = lector[1]; // Nombre (posición 1 del array del DAO)
                filaMostrar[1] = lector[2]; // Apellidos (posición 2)
                filaMostrar[2] = lector[3]; // Email (posición 3) - ¡IMPORTANTE para la búsqueda!
                filaMostrar[3] = lector[4]; // Fecha Creación (posición 4)
                filaMostrar[4] = lector[5]; // Último Acceso (posición 5)
                
                model.addRow(filaMostrar);
            }
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error al cargar usuarios: " + e.getMessage(), 
            "Error", JOptionPane.ERROR_MESSAGE);
        e.printStackTrace();
    }
}

 private void mostrarTotalLector() {
        String sql = "SELECT COUNT(*) FROM usuario WHERE rol = 'lector'";
        try (Connection conn = ConexionMySQL.getInstancia().getConexion();
             PreparedStatement ps = conn.prepareStatement(sql);
             ResultSet rs = ps.executeQuery()) {

            if (rs.next()) {
                int total = rs.getInt(1);
                // ✅ CORREGIDO: Mostrar en consola o en un JLabel si tienes
                System.out.println("Total de lectores: " + total);
                
                // Si quieres mostrar en la interfaz, necesitas un JLabel
                 lblTotalLectores.setText(String.valueOf(total));
            }
        } catch (SQLException e) {
            System.err.println("❌ Error al contar lectores: " + e.getMessage());
        }
    }

     private void limpiarCampos() {
        txtDni.setText("");
        txtNombre.setText("");
        txtApellidoP.setText("");
        txtApellidoM.setText("");
        txtDireccion.setText("");
        txtTelefono.setText("");
        txtEmail.setText("");
        txtContrasena.setText("");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnInicio;
    private javax.swing.JButton btnLibros;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnPrestamos;
    private javax.swing.JButton btnReportes;
    private javax.swing.JButton btnSalir;
    private javax.swing.JButton btnUsuarios;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JLabel lblNombreBibliotecario;
    private javax.swing.JLabel lblTotalLectores;
    private javax.swing.JTable tblUsuarios;
    private javax.swing.JTextField txtApellidoM;
    private javax.swing.JTextField txtApellidoP;
    private javax.swing.JTextField txtContrasena;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtDni;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtTelefono;
    // End of variables declaration//GEN-END:variables
}
