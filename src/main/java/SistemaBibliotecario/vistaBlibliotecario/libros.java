/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package SistemaBibliotecario.vistaBlibliotecario;

import java.util.List;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import SistemaBibliotecario.Dao.LibroDAO;
import SistemaBibliotecario.Modelos.Categoria;
import SistemaBibliotecario.VistaLogin.login;

/**
 *
 * @author User
 */
public class libros extends javax.swing.JPanel {
private LibroDAO libroDAO;
    /**
     * Creates new form usuarios
     */
    public libros() {
        initComponents();
        libroDAO = new LibroDAO();
        cargarCategorias();
    cargarLibros();
    agregarListenerTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        btnPrestamos = new javax.swing.JButton();
        btnLibros = new javax.swing.JButton();
        btnInicio = new javax.swing.JButton();
        btnReportes = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnSalir = new javax.swing.JButton();
        btnUsuarios = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblLibros = new javax.swing.JTable();
        jTextField7 = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        txtIsbn = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtStock = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtAutor = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        txtTitulo = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        txtAñoPublicacion = new javax.swing.JTextField();
        cbxCategoria = new javax.swing.JComboBox<>();
        btnCategoria = new javax.swing.JButton();
        btnAgregar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("GESTION DE BIBLIOTECARIOS");

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(19, 38, 76));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnPrestamos.setBackground(new java.awt.Color(0, 51, 102));
        btnPrestamos.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        btnPrestamos.setForeground(new java.awt.Color(255, 255, 255));
        btnPrestamos.setText("PRESTAMOS");
        btnPrestamos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrestamosActionPerformed(evt);
            }
        });
        jPanel2.add(btnPrestamos, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 400, 240, 80));

        btnLibros.setBackground(new java.awt.Color(0, 0, 0));
        btnLibros.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        btnLibros.setForeground(new java.awt.Color(255, 255, 255));
        btnLibros.setText("LIBROS");
        btnLibros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLibrosActionPerformed(evt);
            }
        });
        jPanel2.add(btnLibros, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 300, 240, 80));

        btnInicio.setBackground(new java.awt.Color(0, 51, 102));
        btnInicio.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        btnInicio.setForeground(new java.awt.Color(255, 255, 255));
        btnInicio.setText("INICIO");
        jPanel2.add(btnInicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 99, 240, 80));

        btnReportes.setBackground(new java.awt.Color(0, 51, 102));
        btnReportes.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        btnReportes.setForeground(new java.awt.Color(255, 255, 255));
        btnReportes.setText("REPORTES");
        btnReportes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReportesActionPerformed(evt);
            }
        });
        jPanel2.add(btnReportes, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 500, 240, 80));

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("BiblioSys");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 30, -1, -1));

        btnSalir.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        btnSalir.setText("SALIR");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        jPanel2.add(btnSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 621, 240, 44));

        btnUsuarios.setBackground(new java.awt.Color(0, 51, 102));
        btnUsuarios.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        btnUsuarios.setForeground(new java.awt.Color(255, 255, 255));
        btnUsuarios.setText("USUARIOS");
        btnUsuarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUsuariosActionPerformed(evt);
            }
        });
        jPanel2.add(btnUsuarios, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 200, 240, 80));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 300, 700));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/logo.jpeg"))); // NOI18N
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 40, 110, 80));

        jPanel3.setBackground(new java.awt.Color(19, 38, 76));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Ventana Gestión de Libros");
        jPanel3.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(14, 8, -1, -1));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 0, 910, 30));

        tblLibros.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tblLibros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Isbn", "Titulo", "Categoria", "Autor", "Stock", "Fecha Ingreso"
            }
        ));
        tblLibros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblLibrosMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                tblLibrosMouseExited(evt);
            }
        });
        jScrollPane1.setViewportView(tblLibros);
        if (tblLibros.getColumnModel().getColumnCount() > 0) {
            tblLibros.getColumnModel().getColumn(3).setResizable(false);
        }

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 300, 890, 370));

        jTextField7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField7ActionPerformed(evt);
            }
        });
        jPanel1.add(jTextField7, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 250, 390, 30));

        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel16.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        jLabel16.setText("Isbn");
        jPanel5.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, -1, 10));
        jPanel5.add(txtIsbn, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 10, 138, -1));

        jLabel17.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        jLabel17.setText("Titulo");
        jPanel5.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, -1, -1));

        jLabel8.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        jLabel8.setText("Año de publicacion");
        jPanel5.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 70, -1, -1));
        jPanel5.add(txtStock, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 40, 160, -1));

        jLabel12.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        jLabel12.setText("Categoria");
        jPanel5.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, -1, -1));
        jPanel5.add(txtAutor, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 10, 160, -1));

        jLabel18.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        jLabel18.setText("Autor");
        jPanel5.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 10, -1, -1));
        jPanel5.add(txtTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 40, 138, -1));

        jLabel19.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        jLabel19.setText("Stock");
        jPanel5.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 40, -1, -1));
        jPanel5.add(txtAñoPublicacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 70, 70, -1));

        jPanel5.add(cbxCategoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 70, 140, -1));

        jPanel1.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 50, 510, 120));

        btnCategoria.setBackground(new java.awt.Color(19, 38, 76));
        btnCategoria.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        btnCategoria.setForeground(new java.awt.Color(255, 255, 255));
        btnCategoria.setText("Crear Categoria");
        btnCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCategoriaActionPerformed(evt);
            }
        });
        jPanel1.add(btnCategoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 50, -1, -1));

        btnAgregar.setBackground(new java.awt.Color(19, 38, 76));
        btnAgregar.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        btnAgregar.setForeground(new java.awt.Color(255, 255, 255));
        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });
        jPanel1.add(btnAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 190, -1, -1));

        btnActualizar.setBackground(new java.awt.Color(19, 38, 76));
        btnActualizar.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        btnActualizar.setForeground(new java.awt.Color(255, 255, 255));
        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });
        jPanel1.add(btnActualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 190, -1, -1));

        btnEliminar.setBackground(new java.awt.Color(19, 38, 76));
        btnEliminar.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        btnEliminar.setForeground(new java.awt.Color(255, 255, 255));
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        jPanel1.add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 190, -1, -1));

        btnBuscar.setBackground(new java.awt.Color(19, 38, 76));
        btnBuscar.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        btnBuscar.setForeground(new java.awt.Color(255, 255, 255));
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        jPanel1.add(btnBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 250, -1, -1));

        btnLimpiar.setBackground(new java.awt.Color(19, 38, 76));
        btnLimpiar.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        btnLimpiar.setForeground(new java.awt.Color(255, 255, 255));
        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });
        jPanel1.add(btnLimpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 190, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnPrestamosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrestamosActionPerformed
javax.swing.JFrame frame = new javax.swing.JFrame("Gestión de Prestamos");
    frame.setDefaultCloseOperation(javax.swing.JFrame.EXIT_ON_CLOSE);
    frame.setContentPane(new SistemaBibliotecario.vistaBlibliotecario.prestamos()); // agrega el panel
    frame.pack(); // ajusta al tamaño preferido
    frame.setLocationRelativeTo(null); // centra la ventana
    frame.setVisible(true); // muestra la nueva ventana

    // Cierra la ventana actual
    javax.swing.SwingUtilities.getWindowAncestor(this).dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_btnPrestamosActionPerformed

    private void btnUsuariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUsuariosActionPerformed
javax.swing.JFrame frame = new javax.swing.JFrame("Gestión de Usuarios");
    frame.setDefaultCloseOperation(javax.swing.JFrame.EXIT_ON_CLOSE);
    frame.setContentPane(new SistemaBibliotecario.vistaBlibliotecario.usuarios()); // agrega el panel
    frame.pack(); // ajusta al tamaño preferido
    frame.setLocationRelativeTo(null); // centra la ventana
    frame.setVisible(true); // muestra la nueva ventana

    // Cierra la ventana actual
    javax.swing.SwingUtilities.getWindowAncestor(this).dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_btnUsuariosActionPerformed

    private void btnLibrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLibrosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnLibrosActionPerformed

    private void jTextField7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField7ActionPerformed

    private void btnReportesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReportesActionPerformed
javax.swing.JFrame frame = new javax.swing.JFrame("Gestión de Reportes");
    frame.setDefaultCloseOperation(javax.swing.JFrame.EXIT_ON_CLOSE);
    frame.setContentPane(new SistemaBibliotecario.vistaBlibliotecario.reportes()); // agrega el panel
    frame.pack(); // ajusta al tamaño preferido
    frame.setLocationRelativeTo(null); // centra la ventana
    frame.setVisible(true); // muestra la nueva ventana

    // Cierra la ventana actual
    javax.swing.SwingUtilities.getWindowAncestor(this).dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_btnReportesActionPerformed

    private void btnCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCategoriaActionPerformed
// Diálogo para crear nueva categoría
        String nombreCategoria = JOptionPane.showInputDialog(this, 
            "Ingrese el nombre de la nueva categoría:",
            "Crear Nueva Categoría",
            JOptionPane.QUESTION_MESSAGE);
        
        if (nombreCategoria != null && !nombreCategoria.trim().isEmpty()) {
            nombreCategoria = nombreCategoria.trim();
            
            if (libroDAO.agregarCategoria(nombreCategoria)) {
                JOptionPane.showMessageDialog(this, "✅ Categoría '" + nombreCategoria + "' creada correctamente.");
                cargarCategorias(); // Recargar las categorías
            } else {
                JOptionPane.showMessageDialog(this, "❌ Error al crear la categoría.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else if (nombreCategoria != null) {
            JOptionPane.showMessageDialog(this, "El nombre de la categoría no puede estar vacío.", "Advertencia", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_btnCategoriaActionPerformed

    private boolean agregarCategoria(String nombreCategoria) {
    // Implementa este método en tu LibroDAO
    return libroDAO.agregarCategoria(nombreCategoria);
}

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        String isbn = txtIsbn.getText().trim();
        String titulo = txtTitulo.getText().trim();
        String autor = txtAutor.getText().trim();
        String stockStr = txtStock.getText().trim();
        String anioStr = txtAñoPublicacion.getText().trim();
        
        // Validar campos vacíos
        if (isbn.isEmpty() || titulo.isEmpty() || autor.isEmpty() || stockStr.isEmpty() || anioStr.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor, complete todos los campos.", "Advertencia", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        // Validar que se haya seleccionado una categoría
        if (cbxCategoria.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(this, "Por favor, seleccione una categoría.", "Advertencia", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        try {
            int stock = Integer.parseInt(stockStr);
            int anioPublicacion = Integer.parseInt(anioStr);
            
            // Validar año
            if (anioPublicacion < 1000 || anioPublicacion > 2024) {
                JOptionPane.showMessageDialog(this, "Por favor, ingrese un año válido.", "Advertencia", JOptionPane.WARNING_MESSAGE);
                return;
            }
            
            // Validar stock
            if (stock < 0) {
                JOptionPane.showMessageDialog(this, "El stock no puede ser negativo.", "Advertencia", JOptionPane.WARNING_MESSAGE);
                return;
            }
            
            // ✅ Obtener categoría seleccionada usando tu clase Categoria
            Categoria categoriaSeleccionada = (Categoria) cbxCategoria.getSelectedItem();
            int idCategoria = categoriaSeleccionada.getIdCategoria();
            
            // Agregar libro
            if (libroDAO.agregarLibro(isbn, titulo, stock, autor, anioPublicacion, idCategoria)) {
                JOptionPane.showMessageDialog(this, "✅ Libro agregado correctamente.");
                limpiarCampos();
                cargarLibros();
            } else {
                JOptionPane.showMessageDialog(this, "❌ Error al agregar el libro.", "Error", JOptionPane.ERROR_MESSAGE);
            }
            
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Stock y Año deben ser números válidos.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
      String isbn = txtIsbn.getText().trim();
    String titulo = txtTitulo.getText().trim();
    String autor = txtAutor.getText().trim();
    String stockStr = txtStock.getText().trim();
    String anioStr = txtAñoPublicacion.getText().trim();
    
    // Validar que haya un libro seleccionado
    if (isbn.isEmpty()) {
        JOptionPane.showMessageDialog(this, "No hay libro seleccionado para actualizar.", "Advertencia", JOptionPane.WARNING_MESSAGE);
        return;
    }
    
    // Validar campos vacíos
    if (titulo.isEmpty() || autor.isEmpty() || stockStr.isEmpty() || anioStr.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Por favor, complete todos los campos.", "Advertencia", JOptionPane.WARNING_MESSAGE);
        return;
    }
    
    // Validar que se haya seleccionado una categoría
    if (cbxCategoria.getSelectedItem() == null) {
        JOptionPane.showMessageDialog(this, "Por favor, seleccione una categoría.", "Advertencia", JOptionPane.WARNING_MESSAGE);
        return;
    }
    
    try {
        int stock = Integer.parseInt(stockStr);
        int anioPublicacion = Integer.parseInt(anioStr);
        
        // Validar año
        if (anioPublicacion < 1000 || anioPublicacion > 2024) {
            JOptionPane.showMessageDialog(this, "Por favor, ingrese un año válido.", "Advertencia", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        // Validar stock
        if (stock < 0) {
            JOptionPane.showMessageDialog(this, "El stock no puede ser negativo.", "Advertencia", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        // Obtener categoría seleccionada
        Categoria categoriaSeleccionada = (Categoria) cbxCategoria.getSelectedItem();
        int idCategoria = categoriaSeleccionada.getIdCategoria();
        
        // Actualizar libro
        if (libroDAO.actualizarLibro(isbn, titulo, stock, autor, anioPublicacion, idCategoria)) {
            JOptionPane.showMessageDialog(this, "✅ Libro actualizado correctamente.");
            limpiarCampos();
            cargarLibros();
        } else {
            JOptionPane.showMessageDialog(this, "❌ Error al actualizar el libro.", "Error", JOptionPane.ERROR_MESSAGE);
        }
        
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Stock y Año deben ser números válidos.", "Error", JOptionPane.ERROR_MESSAGE);
    }
        
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
String isbn = txtIsbn.getText().trim();
    
    if (isbn.isEmpty()) {
        JOptionPane.showMessageDialog(this, "No hay libro seleccionado para eliminar.", "Advertencia", JOptionPane.WARNING_MESSAGE);
        return;
    }
    
    int confirm = JOptionPane.showConfirmDialog(this, 
        "¿Está seguro de eliminar el libro con ISBN: " + isbn + "?", 
        "Confirmar Eliminación", 
        JOptionPane.YES_NO_OPTION);
    
    if (confirm == JOptionPane.YES_OPTION) {
        if (libroDAO.eliminarLibro(isbn)) {
            JOptionPane.showMessageDialog(this, "✅ Libro eliminado correctamente.");
            limpiarCampos();
            cargarLibros();
        } else {
            JOptionPane.showMessageDialog(this, "❌ Error al eliminar el libro.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
String isbn = jTextField7.getText().trim();
    
    if (isbn.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Por favor, ingrese un ISBN para buscar.", "Advertencia", JOptionPane.WARNING_MESSAGE);
        return;
    }
    
    Object[] libro = libroDAO.buscarLibroPorISBN(isbn);
    
    if (libro != null) {
        // Llenar los campos con los datos del libro encontrado
        txtIsbn.setText((String) libro[0]);
        txtTitulo.setText((String) libro[1]);
        txtAutor.setText((String) libro[2]);
        txtStock.setText(String.valueOf(libro[3]));
        txtAñoPublicacion.setText(String.valueOf(libro[4]));
        
        // Seleccionar la categoría correcta en el combobox
        int idCategoria = (Integer) libro[5];
        boolean categoriaEncontrada = false;
        
        for (int i = 0; i < cbxCategoria.getItemCount(); i++) {
            Categoria item = cbxCategoria.getItemAt(i);
            if (item.getIdCategoria() == idCategoria) {
                cbxCategoria.setSelectedIndex(i);
                categoriaEncontrada = true;
                break;
            }
        }
        
        if (!categoriaEncontrada) {
            JOptionPane.showMessageDialog(this, "⚠️ Categoría no encontrada en la lista.", "Advertencia", JOptionPane.WARNING_MESSAGE);
        }
        
        JOptionPane.showMessageDialog(this, "✅ Libro encontrado.");
    } else {
        JOptionPane.showMessageDialog(this, "❌ No se encontró un libro con ese ISBN.", "Error", JOptionPane.ERROR_MESSAGE);
    }    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
limpiarCampos();    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void tblLibrosMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblLibrosMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_tblLibrosMouseExited

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        login view = new login();
        view.setLocationRelativeTo(null); // Centrar la ventana
        view.setVisible(true); // Mostrar el login

        // Cerrar la ventana actual
        javax.swing.SwingUtilities.getWindowAncestor(this).dispose(); // TODO add your handling code here:
    }//GEN-LAST:event_btnSalirActionPerformed

    private void cargarCategorias() {
        try {
            cbxCategoria.removeAllItems();
            List<Object[]> categoriasData = libroDAO.obtenerCategorias();
            
            for (Object[] categoriaData : categoriasData) {
                Categoria categoria = new Categoria();
                categoria.setIdCategoria((Integer) categoriaData[0]);
                categoria.setNombre((String) categoriaData[1]);
                
                cbxCategoria.addItem(categoria);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al cargar categorías: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

      private void cargarLibros() {
        try {
            DefaultTableModel model = (DefaultTableModel) tblLibros.getModel();
            model.setRowCount(0);
            
            List<Object[]> libros = libroDAO.listarLibros();
            for (Object[] libro : libros) {
                model.addRow(libro);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al cargar libros: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

     private void limpiarCampos() {
    txtIsbn.setText("");
    txtTitulo.setText("");
    txtAutor.setText("");
    txtStock.setText("");
    txtAñoPublicacion.setText("");
    if (cbxCategoria.getItemCount() > 0) {
        cbxCategoria.setSelectedIndex(0);
    }
    jTextField7.setText("");
    tblLibros.clearSelection(); // Limpiar selección de la tabla
}
private void tblLibrosMouseClicked(java.awt.event.MouseEvent evt) {                                   
    if (tblLibros.getSelectedRow() != -1) {
        int selectedRow = tblLibros.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) tblLibros.getModel();
        
        // Obtener datos de la fila seleccionada
        String isbn = model.getValueAt(selectedRow, 0).toString();
        String titulo = model.getValueAt(selectedRow, 1).toString();
        String categoriaNombre = model.getValueAt(selectedRow, 2).toString();
        String autor = model.getValueAt(selectedRow, 3).toString();
        String stock = model.getValueAt(selectedRow, 4).toString();
        
        // Llenar los campos con los datos del libro seleccionado
        txtIsbn.setText(isbn);
        txtTitulo.setText(titulo);
        txtAutor.setText(autor);
        txtStock.setText(stock);
        
        // Buscar y seleccionar la categoría correspondiente
        for (int i = 0; i < cbxCategoria.getItemCount(); i++) {
            Categoria categoria = (Categoria) cbxCategoria.getItemAt(i);
            if (categoria.getNombre().equals(categoriaNombre)) {
                cbxCategoria.setSelectedIndex(i);
                break;
            }
        }
        
        // Buscar el año de publicación
        buscarAnioPublicacion(isbn);
    }
}      

    private void agregarListenerTabla() {
    tblLibros.getSelectionModel().addListSelectionListener(event -> {
        if (!event.getValueIsAdjusting() && tblLibros.getSelectedRow() != -1) {
            int selectedRow = tblLibros.getSelectedRow();
            DefaultTableModel model = (DefaultTableModel) tblLibros.getModel();
            
            // Obtener datos de la fila seleccionada
            String isbn = model.getValueAt(selectedRow, 0).toString();
            String titulo = model.getValueAt(selectedRow, 1).toString();
            String autor = model.getValueAt(selectedRow, 2).toString();
            String categoriaNombre = model.getValueAt(selectedRow, 3).toString();
            String stock = model.getValueAt(selectedRow, 4).toString();
            
            // Llenar los campos con los datos del libro seleccionado
            txtIsbn.setText(isbn);
            txtTitulo.setText(titulo);
            txtAutor.setText(autor);
            txtStock.setText(stock);
            
            // Buscar y seleccionar la categoría correspondiente
            for (int i = 0; i < cbxCategoria.getItemCount(); i++) {
                Categoria categoria = cbxCategoria.getItemAt(i);
                if (categoria.getNombre().equals(categoriaNombre)) {
                    cbxCategoria.setSelectedIndex(i);
                    break;
                }
            }
            
            // Buscar el año de publicación (necesitarías modificar tu DAO para incluir este dato)
            buscarAnioPublicacion(isbn);
        }
    });
}

private void buscarAnioPublicacion(String isbn) {
    Object[] libro = libroDAO.buscarLibroPorISBN(isbn);
    if (libro != null && libro.length > 4) {
        txtAñoPublicacion.setText(String.valueOf(libro[4]));
    }
}



    // Clase interna para manejar las categorías en el JComboBox
 


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCategoria;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnInicio;
    private javax.swing.JButton btnLibros;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnPrestamos;
    private javax.swing.JButton btnReportes;
    private javax.swing.JButton btnSalir;
    private javax.swing.JButton btnUsuarios;
    private javax.swing.JComboBox<Categoria> cbxCategoria;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTable tblLibros;
    private javax.swing.JTextField txtAutor;
    private javax.swing.JTextField txtAñoPublicacion;
    private javax.swing.JTextField txtIsbn;
    private javax.swing.JTextField txtStock;
    private javax.swing.JTextField txtTitulo;
    // End of variables declaration//GEN-END:variables
}
