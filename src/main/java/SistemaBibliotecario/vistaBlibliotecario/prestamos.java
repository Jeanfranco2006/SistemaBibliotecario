/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package SistemaBibliotecario.vistaBlibliotecario;

import java.util.List;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import SistemaBibliotecario.Dao.PrestamoDAO;
import SistemaBibliotecario.Modelos.Prestamo;
import SistemaBibliotecario.Modelos.SesionActual;
import SistemaBibliotecario.VistaLogin.login;

/**
 *
 * @author User
 */
public class prestamos extends javax.swing.JPanel {

    /**
     * Creates new form usuarios
     */
    public prestamos() {
        initComponents();
        mostrarTablaPrestamos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        btnPrestamos = new javax.swing.JButton();
        btnUsuarios = new javax.swing.JButton();
        btnInicio = new javax.swing.JButton();
        btnReportes = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnSalir = new javax.swing.JButton();
        btnLibros = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPrestamosActuales = new javax.swing.JTable();
        txtBuscarPrestamos = new javax.swing.JTextField();
        btnRegistrarDevolucion = new javax.swing.JButton();
        btnRegistrarNPrestamo = new javax.swing.JButton();
        cbxEstadoPrestamo = new javax.swing.JComboBox<>();
        btnVerTodosLosPrestamos = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        btnBuscar = new javax.swing.JButton();
        btnMisPrestamos = new javax.swing.JButton();

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("GESTION DE BIBLIOTECARIOS");

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(19, 38, 76));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnPrestamos.setBackground(new java.awt.Color(0, 0, 0));
        btnPrestamos.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        btnPrestamos.setForeground(new java.awt.Color(255, 255, 255));
        btnPrestamos.setText("PRESTAMOS");
        btnPrestamos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrestamosActionPerformed(evt);
            }
        });
        jPanel2.add(btnPrestamos, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 400, 240, 80));

        btnUsuarios.setBackground(new java.awt.Color(0, 51, 102));
        btnUsuarios.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        btnUsuarios.setForeground(new java.awt.Color(255, 255, 255));
        btnUsuarios.setText("USUARIOS");
        btnUsuarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUsuariosActionPerformed(evt);
            }
        });
        jPanel2.add(btnUsuarios, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 200, 240, 80));

        btnInicio.setBackground(new java.awt.Color(0, 51, 102));
        btnInicio.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        btnInicio.setForeground(new java.awt.Color(255, 255, 255));
        btnInicio.setText("INICIO");
        jPanel2.add(btnInicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 99, 240, 80));

        btnReportes.setBackground(new java.awt.Color(0, 51, 102));
        btnReportes.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        btnReportes.setForeground(new java.awt.Color(255, 255, 255));
        btnReportes.setText("REPORTES");
        btnReportes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReportesActionPerformed(evt);
            }
        });
        jPanel2.add(btnReportes, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 500, 240, 80));

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("BiblioSys");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 30, -1, -1));

        btnSalir.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        btnSalir.setText("SALIR");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        jPanel2.add(btnSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 621, 240, 44));

        btnLibros.setBackground(new java.awt.Color(0, 51, 102));
        btnLibros.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        btnLibros.setForeground(new java.awt.Color(255, 255, 255));
        btnLibros.setText("LIBROS");
        btnLibros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLibrosActionPerformed(evt);
            }
        });
        jPanel2.add(btnLibros, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 300, 240, 80));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 300, 700));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/logo.jpeg"))); // NOI18N
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 40, 110, 80));

        jPanel3.setBackground(new java.awt.Color(19, 38, 76));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Ventana Usuarios");
        jPanel3.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(14, 8, -1, -1));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 0, 910, 30));

        tblPrestamosActuales.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tblPrestamosActuales.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Dni", "Nombres", "Libro", "Isbn", "Fecha Prestamo", "Fecha Devolucion", "Estado"
            }
        ));
        jScrollPane1.setViewportView(tblPrestamosActuales);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 230, 860, 380));

        txtBuscarPrestamos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscarPrestamosActionPerformed(evt);
            }
        });
        jPanel1.add(txtBuscarPrestamos, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 100, 550, 30));

        btnRegistrarDevolucion.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        btnRegistrarDevolucion.setForeground(new java.awt.Color(19, 38, 76));
        btnRegistrarDevolucion.setText("+ Registrar Devoluci√≥n");
        btnRegistrarDevolucion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarDevolucionActionPerformed(evt);
            }
        });
        jPanel1.add(btnRegistrarDevolucion, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 50, -1, -1));

        btnRegistrarNPrestamo.setBackground(new java.awt.Color(19, 38, 76));
        btnRegistrarNPrestamo.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        btnRegistrarNPrestamo.setForeground(new java.awt.Color(255, 255, 255));
        btnRegistrarNPrestamo.setText("+ Registrar Nuevo Prestamo");
        btnRegistrarNPrestamo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarNPrestamoActionPerformed(evt);
            }
        });
        jPanel1.add(btnRegistrarNPrestamo, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 50, -1, -1));

        cbxEstadoPrestamo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "activo", "vencido", "devuelto" }));
        jPanel1.add(cbxEstadoPrestamo, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 140, -1, -1));

        btnVerTodosLosPrestamos.setBackground(new java.awt.Color(19, 38, 76));
        btnVerTodosLosPrestamos.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        btnVerTodosLosPrestamos.setForeground(new java.awt.Color(255, 255, 255));
        btnVerTodosLosPrestamos.setText("Ver todos los prestamos");
        btnVerTodosLosPrestamos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerTodosLosPrestamosActionPerformed(evt);
            }
        });
        jPanel1.add(btnVerTodosLosPrestamos, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 180, 270, 40));

        jLabel13.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        jLabel13.setText("Estado");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 140, 50, 20));

        btnBuscar.setBackground(new java.awt.Color(19, 38, 76));
        btnBuscar.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        btnBuscar.setForeground(new java.awt.Color(255, 255, 255));
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        jPanel1.add(btnBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 90, 140, 40));

        btnMisPrestamos.setBackground(new java.awt.Color(19, 38, 76));
        btnMisPrestamos.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        btnMisPrestamos.setForeground(new java.awt.Color(255, 255, 255));
        btnMisPrestamos.setText("Mis Prestamos");
        btnMisPrestamos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMisPrestamosActionPerformed(evt);
            }
        });
        jPanel1.add(btnMisPrestamos, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 180, 170, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnPrestamosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrestamosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnPrestamosActionPerformed

    private void btnLibrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLibrosActionPerformed
javax.swing.JFrame frame = new javax.swing.JFrame("Gesti√≥n de Libros");
    frame.setDefaultCloseOperation(javax.swing.JFrame.EXIT_ON_CLOSE);
    frame.setContentPane(new SistemaBibliotecario.vistaBlibliotecario.libros()); // agrega el panel
    frame.pack(); // ajusta al tama√±o preferido
    frame.setLocationRelativeTo(null); // centra la ventana
    frame.setVisible(true); // muestra la nueva ventana

    // Cierra la ventana actual
    javax.swing.SwingUtilities.getWindowAncestor(this).dispose();            // TODO add your handling code here:
    }//GEN-LAST:event_btnLibrosActionPerformed

    private void btnUsuariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUsuariosActionPerformed
javax.swing.JFrame frame = new javax.swing.JFrame("Gesti√≥n de Usuarios");
    frame.setDefaultCloseOperation(javax.swing.JFrame.EXIT_ON_CLOSE);
    frame.setContentPane(new SistemaBibliotecario.vistaBlibliotecario.usuarios()); // agrega el panel
    frame.pack(); // ajusta al tama√±o preferido
    frame.setLocationRelativeTo(null); // centra la ventana
    frame.setVisible(true); // muestra la nueva ventana

    // Cierra la ventana actual
    javax.swing.SwingUtilities.getWindowAncestor(this).dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_btnUsuariosActionPerformed

    private void txtBuscarPrestamosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscarPrestamosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBuscarPrestamosActionPerformed

    private void btnReportesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReportesActionPerformed
javax.swing.JFrame frame = new javax.swing.JFrame("Gesti√≥n de Reportes");
    frame.setDefaultCloseOperation(javax.swing.JFrame.EXIT_ON_CLOSE);
    frame.setContentPane(new SistemaBibliotecario.vistaBlibliotecario.reportes()); // agrega el panel
    frame.pack(); // ajusta al tama√±o preferido
    frame.setLocationRelativeTo(null); // centra la ventana
    frame.setVisible(true); // muestra la nueva ventana

    // Cierra la ventana actual
    javax.swing.SwingUtilities.getWindowAncestor(this).dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_btnReportesActionPerformed

    private void btnRegistrarNPrestamoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarNPrestamoActionPerformed
     String dniBibliotecario = SesionActual.dni;
    String dniUsuario = JOptionPane.showInputDialog(this, "Ingrese el DNI del lector:");
    String isbnLibro = JOptionPane.showInputDialog(this, "Ingrese el ISBN del libro:");

    if (dniUsuario == null || isbnLibro == null || dniUsuario.trim().isEmpty() || isbnLibro.trim().isEmpty()) {
        JOptionPane.showMessageDialog(this, "Operaci√≥n cancelada o datos vac√≠os.");
        return;
    }

    PrestamoDAO prestamoDAO = new PrestamoDAO();
    boolean exito = prestamoDAO.registrarPrestamo(dniUsuario, isbnLibro, dniBibliotecario);

    if (exito) {
        mostrarTablaPrestamos(); // ‚Üê Esto ahora mostrar√° solo los pr√©stamos del bibliotecario actual
        JOptionPane.showMessageDialog(this, "‚úÖ Pr√©stamo registrado correctamente.");
    } else {
        JOptionPane.showMessageDialog(this, "‚ùå No se pudo registrar el pr√©stamo.", "Error", JOptionPane.ERROR_MESSAGE);
    }
   
    }//GEN-LAST:event_btnRegistrarNPrestamoActionPerformed

    private void btnRegistrarDevolucionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarDevolucionActionPerformed
        // Obtener la fila seleccionada en la tabla
    int filaSeleccionada = tblPrestamosActuales.getSelectedRow();
    
    if (filaSeleccionada == -1) {
        JOptionPane.showMessageDialog(this, "‚ö†Ô∏è Por favor, seleccione un pr√©stamo de la tabla para registrar la devoluci√≥n.");
        return;
    }
    
    // Obtener los datos de la fila seleccionada
    String dniLector = tblPrestamosActuales.getValueAt(filaSeleccionada, 0).toString();
    String nombresLector = tblPrestamosActuales.getValueAt(filaSeleccionada, 1).toString();
    String tituloLibro = tblPrestamosActuales.getValueAt(filaSeleccionada, 2).toString();
    String isbn = tblPrestamosActuales.getValueAt(filaSeleccionada, 3).toString();
    String estado = tblPrestamosActuales.getValueAt(filaSeleccionada, 6).toString();
    
    // Verificar que el pr√©stamo est√© activo
    if ("devuelto".equalsIgnoreCase(estado)) {
        JOptionPane.showMessageDialog(this, "‚ö†Ô∏è Este pr√©stamo ya fue devuelto.");
        return;
    }
    
    try {
        // Obtener el ID del pr√©stamo
        PrestamoDAO prestamoDAO = new PrestamoDAO();
        int idPrestamo = prestamoDAO.obtenerIdPrestamoPorDniEIsbn(dniLector, isbn, SesionActual.dni);
        
        if (idPrestamo == -1) {
            JOptionPane.showMessageDialog(this, "‚ùå No se pudo identificar el pr√©stamo seleccionado.");
            return;
        }
        
        // Verificar si hay retraso
        int diasRetraso = prestamoDAO.verificarRetrasoPrestamo(idPrestamo);
        
        String mensajeConfirmacion;
        if (diasRetraso > 0) {
            mensajeConfirmacion = "‚ö†Ô∏è PR√âSTAMO CON RETRASO\n\n" +
                                "Lector: " + nombresLector + " (" + dniLector + ")\n" +
                                "Libro: " + tituloLibro + "\n" +
                                "D√≠as de retraso: " + diasRetraso + "\n" +
                                "Multa a aplicar: S/ " + (diasRetraso * 2.0) + "\n\n" +
                                "¬øDesea registrar la devoluci√≥n con multa?";
        } else {
            mensajeConfirmacion = "¬øEst√° seguro de registrar la devoluci√≥n?\n\n" +
                                "Lector: " + nombresLector + " (" + dniLector + ")\n" +
                                "Libro: " + tituloLibro;
        }
        
        // Confirmar la devoluci√≥n
        int confirmacion = JOptionPane.showConfirmDialog(this,
            mensajeConfirmacion,
            "Confirmar Devoluci√≥n",
            JOptionPane.YES_NO_OPTION,
            diasRetraso > 0 ? JOptionPane.WARNING_MESSAGE : JOptionPane.QUESTION_MESSAGE);
        
        if (confirmacion != JOptionPane.YES_OPTION) {
            return;
        }
        
        // Registrar la devoluci√≥n
        boolean exito = prestamoDAO.registrarDevolucion(idPrestamo, SesionActual.dni);
        
        if (exito) {
            if (diasRetraso > 0) {
                JOptionPane.showMessageDialog(this, 
                    "‚úÖ Devoluci√≥n registrada con RETRASO\n" +
                    "D√≠as de retraso: " + diasRetraso + "\n" +
                    "Multa aplicada: S/ " + (diasRetraso * 2.0) + "\n" +
                    "Multa registrada en el sistema.\n" +
                    "El usuario ha sido bloqueado hasta pagar la multa.");
            } else {
                JOptionPane.showMessageDialog(this, 
                    "‚úÖ Devoluci√≥n registrada correctamente.\n" +
                    "El stock del libro ha sido actualizado.");
            }
            mostrarTablaPrestamos(); // Actualizar la tabla
        } else {
            JOptionPane.showMessageDialog(this, "‚ùå No se pudo registrar la devoluci√≥n.");
        }
        
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "‚ùå Error: " + e.getMessage());
        e.printStackTrace();
    }
        
    }//GEN-LAST:event_btnRegistrarDevolucionActionPerformed

    private void btnVerTodosLosPrestamosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerTodosLosPrestamosActionPerformed
    mostrarTodosLosPrestamos();


    }//GEN-LAST:event_btnVerTodosLosPrestamosActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
    buscarPrestamos();


    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnMisPrestamosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMisPrestamosActionPerformed

            mostrarMisPrestamos();


    }//GEN-LAST:event_btnMisPrestamosActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        login view = new login();  
    view.setLocationRelativeTo(null); // Centrar la ventana
    view.setVisible(true); // Mostrar el login

    // Cerrar la ventana actual
    javax.swing.SwingUtilities.getWindowAncestor(this).dispose(); // TODO add your handling code here:
    }//GEN-LAST:event_btnSalirActionPerformed

    public void mostrarTablaPrestamos() {
    try {
        PrestamoDAO prestamoDAO = new PrestamoDAO();
        
        // Obtener pr√©stamos solo del bibliotecario en sesi√≥n
        List<Prestamo> listaPrestamos = prestamoDAO.obtenerPrestamosPorBibliotecario(SesionActual.dni);
        
        // DEBUG: Mostrar en consola qu√© pr√©stamos se est√°n cargando
        System.out.println("=== DEBUG: PR√âSTAMOS ENCONTRADOS PARA BIBLIOTECARIO: " + SesionActual.dni + " ===");
        for (Prestamo p : listaPrestamos) {
            System.out.println("ID: " + p.getIdPrestamo() + 
                             " | Estado: " + p.getEstado() + 
                             " | DNI Lector: " + p.getDniLector() +
                             " | Libro: " + p.getTituloLibro() +
                             " | ISBN: " + p.getIsbn() +
                             " | Fecha Pr√©stamo: " + p.getFechaPrestamo() +
                             " | Fecha Devoluci√≥n: " + p.getFechaDevolucion());
        }
        System.out.println("Total pr√©stamos encontrados: " + listaPrestamos.size());
        System.out.println("==========================================");
        
        DefaultTableModel modelo = (DefaultTableModel) tblPrestamosActuales.getModel();
        modelo.setRowCount(0); // Limpiar tabla antes de agregar nuevos datos
        
        for (Prestamo prestamo : listaPrestamos) {
            Object[] fila = {
                prestamo.getDniLector(),
                prestamo.getNombresLector(),
                prestamo.getTituloLibro(),
                prestamo.getIsbn(),
                prestamo.getFechaPrestamo(),
                prestamo.getFechaDevolucion(),
                prestamo.getEstado()
            };
            modelo.addRow(fila);
        }
        
        // Mostrar mensaje informativo
        JOptionPane.showMessageDialog(this, 
            "Se encontraron " + listaPrestamos.size() + " pr√©stamos realizados por usted.",
            "Informaci√≥n", 
            JOptionPane.INFORMATION_MESSAGE);
        
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error al cargar los pr√©stamos: " + e.getMessage(), 
                                    "Error", JOptionPane.ERROR_MESSAGE);
        e.printStackTrace();
        
        // DEBUG: Mostrar el error completo
        System.out.println("=== ERROR AL CARGAR PR√âSTAMOS ===");
        e.printStackTrace();
        System.out.println("=================================");
    }
}

// M√©todo auxiliar para obtener el ID del pr√©stamo desde la fila seleccionada
private int obtenerIdPrestamoDesdeFila(int filaSeleccionada) {
    try {
        String dniLector = tblPrestamosActuales.getValueAt(filaSeleccionada, 0).toString();
        String isbn = tblPrestamosActuales.getValueAt(filaSeleccionada, 3).toString();
        
        PrestamoDAO prestamoDAO = new PrestamoDAO();
        return prestamoDAO.obtenerIdPrestamoPorDniEIsbn(dniLector, isbn, SesionActual.dni);
        
    } catch (Exception e) {
        e.printStackTrace();
        return -1;
    }
}

// M√©todo para mostrar solo los pr√©stamos del bibliotecario logueado
public void mostrarMisPrestamos() {
    try {
        PrestamoDAO prestamoDAO = new PrestamoDAO();
        List<Prestamo> listaPrestamos = prestamoDAO.obtenerPrestamosPorBibliotecario(SesionActual.dni);
        
        cargarPrestamosEnTabla(listaPrestamos, "Mis Pr√©stamos");
        
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error al cargar mis pr√©stamos: " + e.getMessage(), 
                                    "Error", JOptionPane.ERROR_MESSAGE);
        e.printStackTrace();
    }
}

// M√©todo para mostrar TODOS los pr√©stamos
public void mostrarTodosLosPrestamos() {
    try {
        PrestamoDAO prestamoDAO = new PrestamoDAO();
        List<Prestamo> listaPrestamos = prestamoDAO.obtenerTodosLosPrestamos();
        
        cargarPrestamosEnTabla(listaPrestamos, "Todos los Pr√©stamos");
        
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error al cargar todos los pr√©stamos: " + e.getMessage(), 
                                    "Error", JOptionPane.ERROR_MESSAGE);
        e.printStackTrace();
    }
}

// M√©todo para buscar pr√©stamos
public void buscarPrestamos() {
    try {
        String textoBusqueda = txtBuscarPrestamos.getText().trim();
        String estadoSeleccionado = (String) cbxEstadoPrestamo.getSelectedItem();
        
        PrestamoDAO prestamoDAO = new PrestamoDAO();
        List<Prestamo> listaPrestamos;
        
        if (!textoBusqueda.isEmpty() && !textoBusqueda.equals("Buscar pr√©stamos....")) {
            // Buscar por DNI o ISBN
            if (textoBusqueda.matches("\\d+")) { // Si es solo n√∫meros, buscar por DNI
                listaPrestamos = prestamoDAO.buscarPrestamos("dni", textoBusqueda);
            } else { // Si tiene letras, buscar por ISBN
                listaPrestamos = prestamoDAO.buscarPrestamos("isbn", textoBusqueda);
            }
        } else if (!estadoSeleccionado.equals("activo")) { // Cambia "Todos" por "activo" seg√∫n tu ComboBox
            // Buscar por estado
            listaPrestamos = prestamoDAO.buscarPrestamos("estado", estadoSeleccionado);
        } else {
            // Si no hay criterios, mostrar todos
            listaPrestamos = prestamoDAO.obtenerTodosLosPrestamos();
        }
        
        cargarPrestamosEnTabla(listaPrestamos, "Resultados de B√∫squeda");
        
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error al buscar pr√©stamos: " + e.getMessage(), 
                                    "Error", JOptionPane.ERROR_MESSAGE);
        e.printStackTrace();
    }
}
// M√©todo gen√©rico para cargar pr√©stamos en la tabla
private void cargarPrestamosEnTabla(List<Prestamo> listaPrestamos, String titulo) {
    DefaultTableModel modelo = (DefaultTableModel) tblPrestamosActuales.getModel();
    modelo.setRowCount(0); // Limpiar tabla
    
    for (Prestamo prestamo : listaPrestamos) {
        Object[] fila = {
            prestamo.getDniLector(),
            prestamo.getNombresLector(),
            prestamo.getTituloLibro(),
            prestamo.getIsbn(),
            prestamo.getFechaPrestamo(),
            prestamo.getFechaDevolucion(),
            prestamo.getEstado()
        };
        modelo.addRow(fila);
    }
    
    JOptionPane.showMessageDialog(this, 
        "Se encontraron " + listaPrestamos.size() + " pr√©stamos - " + titulo,
        "Informaci√≥n", 
        JOptionPane.INFORMATION_MESSAGE);
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnInicio;
    private javax.swing.JButton btnLibros;
    private javax.swing.JButton btnMisPrestamos;
    private javax.swing.JButton btnPrestamos;
    private javax.swing.JButton btnRegistrarDevolucion;
    private javax.swing.JButton btnRegistrarNPrestamo;
    private javax.swing.JButton btnReportes;
    private javax.swing.JButton btnSalir;
    private javax.swing.JButton btnUsuarios;
    private javax.swing.JButton btnVerTodosLosPrestamos;
    private javax.swing.JComboBox<String> cbxEstadoPrestamo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblPrestamosActuales;
    private javax.swing.JTextField txtBuscarPrestamos;
    // End of variables declaration//GEN-END:variables
}
