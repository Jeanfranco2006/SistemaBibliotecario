/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package SistemaBibliotecario.VistaLogin;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import javax.swing.JOptionPane;

import SistemaBibliotecario.Conexion.ConexionMySQL;
import java.sql.Statement;

/**
 *
 * @author User
 */
public class Register extends javax.swing.JPanel {

    /**
     * Creates new form Register
     */
    public Register() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        txtDni = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        txtApellidoP = new javax.swing.JTextField();
        txtApellidoM = new javax.swing.JTextField();
        txtDireccion = new javax.swing.JTextField();
        txtTelefono = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jPasswordFieldConfirmarContrasena = new javax.swing.JPasswordField();
        jPasswordFieldContrasena = new javax.swing.JPasswordField();
        btnRegistrarse = new javax.swing.JButton();
        btnRegresar = new javax.swing.JButton();
        jLabel25 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel14.setBackground(new java.awt.Color(255, 255, 255));
        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel14.setText("Confirmar Contraseña");
        add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 340, 220, 20));

        jLabel15.setBackground(new java.awt.Color(255, 255, 255));
        jLabel15.setFont(new java.awt.Font("Sitka Text", 1, 36)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 0, 102));
        jLabel15.setText("REGISTRO DE LECTORES");
        add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 470, -1));

        jLabel16.setBackground(new java.awt.Color(255, 255, 255));
        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel16.setText("Nombres");
        add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 130, 100, 20));

        jLabel17.setBackground(new java.awt.Color(255, 255, 255));
        jLabel17.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel17.setText("Apellido Paterno");
        add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 160, -1, 20));

        jLabel18.setBackground(new java.awt.Color(255, 255, 255));
        jLabel18.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel18.setText("Apellido Materno");
        add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 190, 180, 20));

        jLabel19.setBackground(new java.awt.Color(255, 255, 255));
        jLabel19.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel19.setText("Direccion");
        add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 220, 120, 20));

        jLabel20.setBackground(new java.awt.Color(255, 255, 255));
        jLabel20.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel20.setText("Telefono");
        add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 250, 100, 20));

        jLabel21.setBackground(new java.awt.Color(255, 255, 255));
        jLabel21.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel21.setText("Email");
        add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 280, 80, 20));
        add(txtDni, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 100, 180, -1));
        add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 130, 180, -1));
        add(txtApellidoP, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 160, 180, -1));
        add(txtApellidoM, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 190, 180, -1));
        add(txtDireccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 220, 180, -1));
        add(txtTelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 250, 180, -1));
        add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 280, 180, -1));

        jLabel22.setBackground(new java.awt.Color(255, 255, 255));
        jLabel22.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel22.setText("Contraseña");
        add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 310, 110, 20));

        jLabel23.setBackground(new java.awt.Color(255, 255, 255));
        jLabel23.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel23.setText("Dni");
        add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 100, 40, 20));

        jLabel24.setBackground(new java.awt.Color(255, 255, 255));
        jLabel24.setFont(new java.awt.Font("Sitka Text", 1, 36)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setText("REGISTRO DE LECTORES");
        add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 470, 40));
        add(jPasswordFieldConfirmarContrasena, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 340, 180, -1));
        add(jPasswordFieldContrasena, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 310, 180, -1));

        btnRegistrarse.setBackground(new java.awt.Color(19, 38, 76));
        btnRegistrarse.setFont(new java.awt.Font("Segoe UI Historic", 1, 18)); // NOI18N
        btnRegistrarse.setForeground(new java.awt.Color(255, 255, 255));
        btnRegistrarse.setText("REGISTRARSE");
        btnRegistrarse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarseActionPerformed(evt);
            }
        });
        add(btnRegistrarse, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 380, -1, -1));

        btnRegresar.setBackground(new java.awt.Color(19, 38, 76));
        btnRegresar.setFont(new java.awt.Font("Segoe UI Historic", 1, 18)); // NOI18N
        btnRegresar.setForeground(new java.awt.Color(255, 255, 255));
        btnRegresar.setText("REGRESAR");
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });
        add(btnRegresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 380, -1, -1));

        jLabel25.setBackground(new java.awt.Color(255, 255, 255));
        jLabel25.setFont(new java.awt.Font("Sitka Text", 1, 36)); // NOI18N
        jLabel25.setText("REGISTRO DE LECTORES");
        add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 470, 40));
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegistrarseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarseActionPerformed
// Obtener datos de los campos
    String dni = txtDni.getText().trim();
    String nombre = txtNombre.getText().trim();
    String apellidoP = txtApellidoP.getText().trim();
    String apellidoM = txtApellidoM.getText().trim();
    String direccion = txtDireccion.getText().trim();
    String telefono = txtTelefono.getText().trim();
    String email = txtEmail.getText().trim();
    String contrasena = new String(jPasswordFieldContrasena.getPassword());
    String confirmarContrasena = new String(jPasswordFieldConfirmarContrasena.getPassword());
    String rol = "lector"; // Rol por defecto

    // Validar campos obligatorios
    if (dni.isEmpty() || nombre.isEmpty() || apellidoP.isEmpty() || apellidoM.isEmpty() ||
        direccion.isEmpty() || telefono.isEmpty() || email.isEmpty() || 
        contrasena.isEmpty() || confirmarContrasena.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Por favor, complete todos los campos.", 
            "Advertencia", JOptionPane.WARNING_MESSAGE);
        return;
    }

    // Validar que las contraseñas coincidan
    if (!contrasena.equals(confirmarContrasena)) {
        JOptionPane.showMessageDialog(this, "Las contraseñas no coinciden.", 
            "Error", JOptionPane.ERROR_MESSAGE);
        jPasswordFieldContrasena.setText("");
        jPasswordFieldConfirmarContrasena.setText("");
        return;
    }

    // Validar longitud mínima de contraseña
    if (contrasena.length() < 6) {
        JOptionPane.showMessageDialog(this, "La contraseña debe tener al menos 6 caracteres.", 
            "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Validar formato de email
    if (!email.matches("^[A-Za-z0-9+_.-]+@(.+)$")) {
        JOptionPane.showMessageDialog(this, "Por favor, ingrese un email válido.", 
            "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    Connection conn = null;
    PreparedStatement psPersona = null;
    PreparedStatement psUsuario = null;
    ResultSet rs = null;

    try {
        conn = ConexionMySQL.getInstancia().getConexion();
        conn.setAutoCommit(false); // 🔒 Iniciar transacción

        // Verificar si el DNI ya existe
        String verificarDNI = "SELECT COUNT(*) FROM persona WHERE dni = ?";
        PreparedStatement psVerificar = conn.prepareStatement(verificarDNI);
        psVerificar.setString(1, dni);
        ResultSet rsVerificar = psVerificar.executeQuery();
        if (rsVerificar.next() && rsVerificar.getInt(1) > 0) {
            JOptionPane.showMessageDialog(this, "El DNI ya está registrado.", 
                "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Verificar si el email ya existe
        String verificarEmail = "SELECT COUNT(*) FROM persona WHERE email = ?";
        psVerificar = conn.prepareStatement(verificarEmail);
        psVerificar.setString(1, email);
        rsVerificar = psVerificar.executeQuery();
        if (rsVerificar.next() && rsVerificar.getInt(1) > 0) {
            JOptionPane.showMessageDialog(this, "El email ya está registrado.", 
                "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // 1️⃣ Insertar persona
        String sqlPersona = "INSERT INTO persona (dni, nombre, apellido_p, apellido_m, direccion, telefono, email) "
                          + "VALUES (?, ?, ?, ?, ?, ?, ?)";
        psPersona = conn.prepareStatement(sqlPersona, Statement.RETURN_GENERATED_KEYS);
        psPersona.setString(1, dni);
        psPersona.setString(2, nombre);
        psPersona.setString(3, apellidoP);
        psPersona.setString(4, apellidoM);
        psPersona.setString(5, direccion);
        psPersona.setString(6, telefono);
        psPersona.setString(7, email);
        psPersona.executeUpdate();

        // Obtener id_persona generado
        rs = psPersona.getGeneratedKeys();
        int idPersona = 0;
        if (rs.next()) {
            idPersona = rs.getInt(1);
        }

        // 2️⃣ Insertar usuario
        String sqlUsuario = "INSERT INTO usuario (id_persona, contrasena, rol) VALUES (?, ?, ?)";
        psUsuario = conn.prepareStatement(sqlUsuario);
        psUsuario.setInt(1, idPersona);
        psUsuario.setString(2, contrasena);
        psUsuario.setString(3, rol);
        psUsuario.executeUpdate();

        conn.commit(); // ✅ Confirmar transacción
        
        // ✅ REGISTRO EXITOSO - Ahora redirigir al login
        JOptionPane.showMessageDialog(this, 
            "✅ Registro exitoso.\nAhora puedes iniciar sesión como Lector.", 
            "Registro Exitoso", JOptionPane.INFORMATION_MESSAGE);

        // Redirigir a la ventana login
        redirigirALogin();

    } catch (SQLException e) {
        try {
            if (conn != null) conn.rollback(); // ❌ Revertir si hay error
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        JOptionPane.showMessageDialog(this, 
            "❌ Error al registrar usuario: " + e.getMessage(), 
            "Error", JOptionPane.ERROR_MESSAGE);
        e.printStackTrace();
    } finally {
        // Cerrar recursos
        try {
            if (rs != null) rs.close();
            if (psPersona != null) psPersona.close();
            if (psUsuario != null) psUsuario.close();
            if (conn != null) conn.setAutoCommit(true);
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    }//GEN-LAST:event_btnRegistrarseActionPerformed

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
      // Crear y mostrar la ventana login
    login loginWindow = new login();
    loginWindow.setLocationRelativeTo(null); // Centrar la ventana
    loginWindow.setVisible(true); // Mostrar el login

    // Cerrar la ventana actual de registro
    javax.swing.SwingUtilities.getWindowAncestor(this).dispose(); // TODO add your handling code here:
    }//GEN-LAST:event_btnRegresarActionPerformed

    // Método para redirigir a la ventana login
private void redirigirALogin() {
    // Crear y mostrar la ventana login
    login loginWindow = new login();
    loginWindow.setLocationRelativeTo(null); // Centrar la ventana
    loginWindow.setVisible(true); // Mostrar el login

    // Cerrar la ventana actual de registro
    javax.swing.SwingUtilities.getWindowAncestor(this).dispose();
}

    // Método para limpiar campos después del registro
private void limpiarCamposRegistro() {
    txtDni.setText("");
    txtNombre.setText("");
    txtApellidoP.setText("");
    txtApellidoM.setText("");
    txtDireccion.setText("");
    txtTelefono.setText("");
    txtEmail.setText("");
    jPasswordFieldContrasena.setText("");
    jPasswordFieldConfirmarContrasena.setText("");
}


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRegistrarse;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JPasswordField jPasswordFieldConfirmarContrasena;
    private javax.swing.JPasswordField jPasswordFieldContrasena;
    private javax.swing.JTextField txtApellidoM;
    private javax.swing.JTextField txtApellidoP;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtDni;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtTelefono;
    // End of variables declaration//GEN-END:variables
}
